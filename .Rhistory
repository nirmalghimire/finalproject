getwd()
library(dplyr)
library(data.table)
library(Hmisc)
#Downloading the provided dataset
filelocation<-"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(filelocation,destfile="./provideddata.zip")
#unzipping the downloaded dataset
unzip(zipfile="./provideddata.zip", exdir="./finalproject3")
#Understanding the data files
#1.Training Dataset
x_train<-read.table("./finalproject3/UCI HAR Dataset/train/x_train.txt")
y_train<-read.table("./finalproject3/UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("./finalproject3/UCI HAR Dataset/train/subject_train.txt")
x_train
y_train
subject_train
#2.Test Dataset
x_test <- read.table("./finalproject3/UCI HAR Dataset/test/X_test.txt")
y_test <- read.table("./finalproject3/UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("./finalproject3/UCI HAR Dataset/test/subject_test.txt")
#checking things
x_test
y_test
subject_test
#3. Reading feature vector
features <- read.table("./finalproject3/UCI HAR Dataset/features.txt")
#checking things
features
#4. Reading provided activity labels
activity<-read.table("./finalproject3/UCI HAR Dataset/activity_labels.txt")
#checking things
activity
#2. Assigning Names to the variables
#a. Training variables
colnames(x_train) <- features[,2]
colnames(y_train) <- "activityID"
colnames(subject_train) <- "subjectID"
#b. Test variables
colnames(x_test) <- features[,2]
colnames(y_test) <- "activityID"
colnames(subject_test) <- "subjectID"
#c. Activity Labels
colnames(activity) <- c("activityID", "activityType")
#checking things
colnames(x_train)
colnames(y_train)
colnames(subject_train)
colnames(x_test)
colnames(y_test)
colnames(subject_test)
colnames(activity)
#3. Combining all dataset into one
trainall<-cbind(y_train, subject_train, x_train)
testall<-cbind(y_test, subject_test, x_test)
finalset<-rbind(alltrain, alltest)
finalset<-rbind(trainall, testall)
#checking things
trainall
testall
finalset
#Reading columns on finalset
colmns<-colnames(finalset)
colmns
colmns<-colnames(finalset)
columns
colmns
#4. Mean and SD for each measurement
mean&sd<-(grepl("activityID", colmns)|grepl("subjectID",colmns))
#4. Mean and SD for each measurement
mean_sd<-(grepl("activityID", colmns)|grepl("subjectID",colmns))
#4. Mean and SD for each measurement
mean_sd<-(grepl("activityID", colmns)|grepl("subjectID",colmns)|
grepl("mean...",colmns)|grepl("std...",colmns))
#5. Creating required subsets
sub_mean_sd<-finalset[,mean_sd==TRUE]
#6. Using descriptive activity
ActvityNames<-merge(sub_mean_sd,activity,
by="activityId",
all.x=TRUE)
?by
#5. Creating required subsets
sub_mean_sd<-finalset[,mean_sd==TRUE]
sub_mean_sd
max.print(200000)
nrows=20670
sub_mean_sd
max.print=100000
sub_mean_sd
head(sub_mean_sd)
ActvityNames<-merge(sub_mean_sd,activity,
by="activityId",
all.x=TRUE)
ActvityNames
#6. Using descriptive activity
ActvityNames<-c(sub_mean_sd,562,563)
dim(ActvityNames)
ActvityNames
str(ActvityNames)
dim(ActvityNames)
dim(finalset)
#7. modifying dataset with required columns
modified_data<-finalset[,ActivityNames]
#6. Using descriptive activity
ActvityNames<-c(sub_mean_sd,562,563)
dim(finalset)
#7. modifying dataset with required columns
modified_data<-finalset[,ActivityNames]
#7. modifying dataset with required columns
modified_data<-finalset[,ActvityNames]
#5. Creating required subsets
sub_mean_sd<-finalset[,mean_sd==TRUE]
#6. Using descriptive activity
ActvityNames<-c(sub_mean_sd,562,563)
dim(finalset)
colnames(activity)
#7.
modified_data<-finalset[,ActivityNames]
#7.
modified_data<-finalset[,ActivityNames]
#6. Using descriptive activity
ActvityNames<-c(as.character(sub_mean_sd),"subject","activity")
dim(finalset)
#7.
modified_data<-subset(finalset, select=ActivityNames)
#6. Using descriptive activity
ActvityNames<-c(as.character(sub_mean_sd),"subject","activity")
ActvityNames
#7.
modified_data<-subset(finalset, select=ActivityNames)
